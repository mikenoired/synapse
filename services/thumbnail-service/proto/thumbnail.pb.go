// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/thumbnail.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageThumbnailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageData     []byte                 `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // Данные изображения
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`    // MIME тип
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`                         // Ширина превью (опционально)
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`                       // Высота превью (опционально)
	Quality       int32                  `protobuf:"varint,5,opt,name=quality,proto3" json:"quality,omitempty"`                     // Качество JPEG (1-100, по умолчанию 40)
	Blur          bool                   `protobuf:"varint,6,opt,name=blur,proto3" json:"blur,omitempty"`                           // Применить размытие (по умолчанию true)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageThumbnailRequest) Reset() {
	*x = ImageThumbnailRequest{}
	mi := &file_proto_thumbnail_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageThumbnailRequest) ProtoMessage() {}

func (x *ImageThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thumbnail_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageThumbnailRequest.ProtoReflect.Descriptor instead.
func (*ImageThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_proto_thumbnail_proto_rawDescGZIP(), []int{0}
}

func (x *ImageThumbnailRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ImageThumbnailRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ImageThumbnailRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageThumbnailRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageThumbnailRequest) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *ImageThumbnailRequest) GetBlur() bool {
	if x != nil {
		return x.Blur
	}
	return false
}

type VideoThumbnailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoData     []byte                 `protobuf:"bytes,1,opt,name=video_data,json=videoData,proto3" json:"video_data,omitempty"` // Данные видео
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`    // MIME тип
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`                         // Ширина превью (опционально)
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`                       // Высота превью (опционально)
	Quality       int32                  `protobuf:"varint,5,opt,name=quality,proto3" json:"quality,omitempty"`                     // Качество JPEG (1-100, по умолчанию 40)
	Blur          bool                   `protobuf:"varint,6,opt,name=blur,proto3" json:"blur,omitempty"`                           // Применить размытие (по умолчанию true)
	Timestamp     string                 `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // Временная метка для извлечения кадра (по умолчанию "00:00:01.000")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoThumbnailRequest) Reset() {
	*x = VideoThumbnailRequest{}
	mi := &file_proto_thumbnail_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoThumbnailRequest) ProtoMessage() {}

func (x *VideoThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thumbnail_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoThumbnailRequest.ProtoReflect.Descriptor instead.
func (*VideoThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_proto_thumbnail_proto_rawDescGZIP(), []int{1}
}

func (x *VideoThumbnailRequest) GetVideoData() []byte {
	if x != nil {
		return x.VideoData
	}
	return nil
}

func (x *VideoThumbnailRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *VideoThumbnailRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoThumbnailRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoThumbnailRequest) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *VideoThumbnailRequest) GetBlur() bool {
	if x != nil {
		return x.Blur
	}
	return false
}

func (x *VideoThumbnailRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ImageDimensionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageData     []byte                 `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // Данные изображения
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`    // MIME тип
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageDimensionsRequest) Reset() {
	*x = ImageDimensionsRequest{}
	mi := &file_proto_thumbnail_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDimensionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDimensionsRequest) ProtoMessage() {}

func (x *ImageDimensionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thumbnail_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDimensionsRequest.ProtoReflect.Descriptor instead.
func (*ImageDimensionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_thumbnail_proto_rawDescGZIP(), []int{2}
}

func (x *ImageDimensionsRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ImageDimensionsRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type ThumbnailResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                       // Успешность операции
	ErrorMessage    string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`          // Сообщение об ошибке (если есть)
	ThumbnailBase64 string                 `protobuf:"bytes,3,opt,name=thumbnail_base64,json=thumbnailBase64,proto3" json:"thumbnail_base64,omitempty"` // Base64 превью
	MimeType        string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`                      // MIME тип превью
	Width           int32                  `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`                                           // Ширина превью
	Height          int32                  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`                                         // Высота превью
	SizeBytes       int64                  `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`                  // Размер превью в байтах
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ThumbnailResponse) Reset() {
	*x = ThumbnailResponse{}
	mi := &file_proto_thumbnail_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailResponse) ProtoMessage() {}

func (x *ThumbnailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thumbnail_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailResponse.ProtoReflect.Descriptor instead.
func (*ThumbnailResponse) Descriptor() ([]byte, []int) {
	return file_proto_thumbnail_proto_rawDescGZIP(), []int{3}
}

func (x *ThumbnailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ThumbnailResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ThumbnailResponse) GetThumbnailBase64() string {
	if x != nil {
		return x.ThumbnailBase64
	}
	return ""
}

func (x *ThumbnailResponse) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ThumbnailResponse) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ThumbnailResponse) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ThumbnailResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type ImageDimensionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // Успешность операции
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Сообщение об ошибке (если есть)
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`                                  // Ширина изображения
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`                                // Высота изображения
	SizeBytes     int64                  `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`         // Размер изображения в байтах
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageDimensionsResponse) Reset() {
	*x = ImageDimensionsResponse{}
	mi := &file_proto_thumbnail_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDimensionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDimensionsResponse) ProtoMessage() {}

func (x *ImageDimensionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thumbnail_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDimensionsResponse.ProtoReflect.Descriptor instead.
func (*ImageDimensionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_thumbnail_proto_rawDescGZIP(), []int{4}
}

func (x *ImageDimensionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ImageDimensionsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ImageDimensionsResponse) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageDimensionsResponse) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageDimensionsResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

var File_proto_thumbnail_proto protoreflect.FileDescriptor

const file_proto_thumbnail_proto_rawDesc = "" +
	"\n" +
	"\x15proto/thumbnail.proto\x12\tthumbnail\"\xaf\x01\n" +
	"\x15ImageThumbnailRequest\x12\x1d\n" +
	"\n" +
	"image_data\x18\x01 \x01(\fR\timageData\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x18\n" +
	"\aquality\x18\x05 \x01(\x05R\aquality\x12\x12\n" +
	"\x04blur\x18\x06 \x01(\bR\x04blur\"\xcd\x01\n" +
	"\x15VideoThumbnailRequest\x12\x1d\n" +
	"\n" +
	"video_data\x18\x01 \x01(\fR\tvideoData\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x18\n" +
	"\aquality\x18\x05 \x01(\x05R\aquality\x12\x12\n" +
	"\x04blur\x18\x06 \x01(\bR\x04blur\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\tR\ttimestamp\"T\n" +
	"\x16ImageDimensionsRequest\x12\x1d\n" +
	"\n" +
	"image_data\x18\x01 \x01(\fR\timageData\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\"\xe7\x01\n" +
	"\x11ThumbnailResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12)\n" +
	"\x10thumbnail_base64\x18\x03 \x01(\tR\x0fthumbnailBase64\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12\x14\n" +
	"\x05width\x18\x05 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x06 \x01(\x05R\x06height\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x03R\tsizeBytes\"\xa5\x01\n" +
	"\x17ImageDimensionsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x05 \x01(\x03R\tsizeBytes2\xa3\x02\n" +
	"\x10ThumbnailService\x12X\n" +
	"\x16GenerateImageThumbnail\x12 .thumbnail.ImageThumbnailRequest\x1a\x1c.thumbnail.ThumbnailResponse\x12X\n" +
	"\x16GenerateVideoThumbnail\x12 .thumbnail.VideoThumbnailRequest\x1a\x1c.thumbnail.ThumbnailResponse\x12[\n" +
	"\x12GetImageDimensions\x12!.thumbnail.ImageDimensionsRequest\x1a\".thumbnail.ImageDimensionsResponseB\x19Z\x17thumbnail-service/protob\x06proto3"

var (
	file_proto_thumbnail_proto_rawDescOnce sync.Once
	file_proto_thumbnail_proto_rawDescData []byte
)

func file_proto_thumbnail_proto_rawDescGZIP() []byte {
	file_proto_thumbnail_proto_rawDescOnce.Do(func() {
		file_proto_thumbnail_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_thumbnail_proto_rawDesc), len(file_proto_thumbnail_proto_rawDesc)))
	})
	return file_proto_thumbnail_proto_rawDescData
}

var file_proto_thumbnail_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_thumbnail_proto_goTypes = []any{
	(*ImageThumbnailRequest)(nil),   // 0: thumbnail.ImageThumbnailRequest
	(*VideoThumbnailRequest)(nil),   // 1: thumbnail.VideoThumbnailRequest
	(*ImageDimensionsRequest)(nil),  // 2: thumbnail.ImageDimensionsRequest
	(*ThumbnailResponse)(nil),       // 3: thumbnail.ThumbnailResponse
	(*ImageDimensionsResponse)(nil), // 4: thumbnail.ImageDimensionsResponse
}
var file_proto_thumbnail_proto_depIdxs = []int32{
	0, // 0: thumbnail.ThumbnailService.GenerateImageThumbnail:input_type -> thumbnail.ImageThumbnailRequest
	1, // 1: thumbnail.ThumbnailService.GenerateVideoThumbnail:input_type -> thumbnail.VideoThumbnailRequest
	2, // 2: thumbnail.ThumbnailService.GetImageDimensions:input_type -> thumbnail.ImageDimensionsRequest
	3, // 3: thumbnail.ThumbnailService.GenerateImageThumbnail:output_type -> thumbnail.ThumbnailResponse
	3, // 4: thumbnail.ThumbnailService.GenerateVideoThumbnail:output_type -> thumbnail.ThumbnailResponse
	4, // 5: thumbnail.ThumbnailService.GetImageDimensions:output_type -> thumbnail.ImageDimensionsResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_thumbnail_proto_init() }
func file_proto_thumbnail_proto_init() {
	if File_proto_thumbnail_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_thumbnail_proto_rawDesc), len(file_proto_thumbnail_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_thumbnail_proto_goTypes,
		DependencyIndexes: file_proto_thumbnail_proto_depIdxs,
		MessageInfos:      file_proto_thumbnail_proto_msgTypes,
	}.Build()
	File_proto_thumbnail_proto = out.File
	file_proto_thumbnail_proto_goTypes = nil
	file_proto_thumbnail_proto_depIdxs = nil
}
